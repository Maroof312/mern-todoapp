{"ast":null,"code":"import axios from 'axios';\nimport { TODO_LIST_REQUEST, TODO_LIST_SUCCESS, TODO_LIST_FAIL, TODO_CREATE_REQUEST, TODO_CREATE_SUCCESS, TODO_CREATE_FAIL, TODO_UPDATE_REQUEST, TODO_UPDATE_SUCCESS, TODO_UPDATE_FAIL, TODO_DELETE_REQUEST, TODO_DELETE_SUCCESS, TODO_DELETE_FAIL } from '../constants/todoConstants';\nexport const listTodos = () => async dispatch => {\n  try {\n    dispatch({\n      type: TODO_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/todos');\n    dispatch({\n      type: TODO_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TODO_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createTodo = text => async dispatch => {\n  try {\n    dispatch({\n      type: TODO_CREATE_REQUEST\n    });\n    const {\n      data\n    } = await axios.post('/api/todos', {\n      text\n    });\n    dispatch({\n      type: TODO_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TODO_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateTodo = (id, todo) => async dispatch => {\n  try {\n    dispatch({\n      type: TODO_UPDATE_REQUEST\n    });\n    const {\n      data\n    } = await axios.put(`/api/todos/${id}`, todo);\n    dispatch({\n      type: TODO_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TODO_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteTodo = id => async dispatch => {\n  try {\n    dispatch({\n      type: TODO_DELETE_REQUEST\n    });\n    await axios.delete(`/api/todos/${id}`);\n    dispatch({\n      type: TODO_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: TODO_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","TODO_LIST_REQUEST","TODO_LIST_SUCCESS","TODO_LIST_FAIL","TODO_CREATE_REQUEST","TODO_CREATE_SUCCESS","TODO_CREATE_FAIL","TODO_UPDATE_REQUEST","TODO_UPDATE_SUCCESS","TODO_UPDATE_FAIL","TODO_DELETE_REQUEST","TODO_DELETE_SUCCESS","TODO_DELETE_FAIL","listTodos","dispatch","type","data","get","payload","error","response","message","createTodo","text","post","updateTodo","id","todo","put","deleteTodo","delete"],"sources":["C:/Users/hp/Desktop/mern-todo-app/frontend/src/actions/todoActions.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n  TODO_LIST_REQUEST,\r\n  TODO_LIST_SUCCESS,\r\n  TODO_LIST_FAIL,\r\n  TODO_CREATE_REQUEST,\r\n  TODO_CREATE_SUCCESS,\r\n  TODO_CREATE_FAIL,\r\n  TODO_UPDATE_REQUEST,\r\n  TODO_UPDATE_SUCCESS,\r\n  TODO_UPDATE_FAIL,\r\n  TODO_DELETE_REQUEST,\r\n  TODO_DELETE_SUCCESS,\r\n  TODO_DELETE_FAIL,\r\n} from '../constants/todoConstants';\r\n\r\nexport const listTodos = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TODO_LIST_REQUEST });\r\n    const { data } = await axios.get('/api/todos');\r\n    dispatch({ type: TODO_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TODO_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createTodo = (text) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TODO_CREATE_REQUEST });\r\n    const { data } = await axios.post('/api/todos', { text });\r\n    dispatch({ type: TODO_CREATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TODO_CREATE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateTodo = (id, todo) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TODO_UPDATE_REQUEST });\r\n    const { data } = await axios.put(`/api/todos/${id}`, todo);\r\n    dispatch({ type: TODO_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TODO_UPDATE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteTodo = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TODO_DELETE_REQUEST });\r\n    await axios.delete(`/api/todos/${id}`);\r\n    dispatch({ type: TODO_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TODO_DELETE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}